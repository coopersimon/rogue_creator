func init() {
    glob.player = create_entity(100);
    glob.level = 1;

    // create_level(glob.level); // if I decide to include level ids
    integer level_id = create_level('level_1');
    // alternatively (below:) glob.levels.append() or glob.levels->append()
    append(glob.levels, level_id);
    layout('standard');
}

func end() {
    text final = "You died on floor: " + len(glob.level)
                 " at level: " + glob.player.level;
    print(final);
}

func tick() {
    clear_print();
    run_all_actions();
}

// coord which_dir() {
// func which_dir() -> coord {
func which_dir() {
    print("Which direction?");
    text key = wait_for_input();
    clear_print();
    coord loc = location_of(glob.player);

    if (key == "w") {
        return <loc.x, loc.y+1>;
    } else if (key == "a") {
        return <loc.x-1, loc.y>;
    } else if (key == "s") {
        return <loc.x, loc.y-1>;
    } else if (key == "d") {
        return <loc.x+1, loc.y>;
    } else {
        clear_print();
        print("Not a direction!");
        // kills script call
        throw();
    }
}

func attack(source, target) {
    print(source.name + " attacks " + target.name);

    integer src_att = rand(source.att - 1, source.att + 1);

    if (source.weapon != null) {
        src_att += source.weapon.att;
    }

    integer trg_def = target.def;

    if (target.armour != null) {
        trg_def += target.armour.def;
    }

    integer damage = src_att - trg_def;

    damage += rand(-1, 1);

    if (damage <= 0) {
        damage = 0;
        print(source.name + " misses!");
    } else {
        print(source.name + " hits " damage " damage!");
    }

    target.hp -= damage;

    if (target.hp <= 0) {
        delete(target);
    }
}
